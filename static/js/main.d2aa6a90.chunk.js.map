{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","components/TodoItem.js","components/TodosList.js","components/Header.js","components/InputTodo.js","components/TodoContainer.js","index.js"],"names":["App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","TodoItem","props","todo","completed","id","title","useEffect","alert","className","type","checked","onChange","handleChangeProps","onClick","deleteTodoProps","style","fontStyle","color","opacity","textDecoration","TodosList","todos","map","Header","isInitialMount","useRef","console","log","bgcolor","Math","floor","random","changeWord","current","document","getElementById","innerHTML","backgroundColor","headerSpan","padding","lineHeight","fontSize","marginBottom","InputTodo","useState","inputText","setInputText","onSubmit","e","preventDefault","addTodoProps","placeholder","value","itle","name","target","TodoContainer","setTodos","show","setShow","axios","get","response","data","newTodo","uuid","filter","ReactDOM","render"],"mappings":"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","file":"static/js/main.d2aa6a90.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and dance to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, {useEffect} from \"react\"\n\n\nconst TodoItem = (props) => {\n  const completedStyle = {\n    fontStyle: \"italic\",\n    color: \"#d35e0f\",\n    opacity: 0.4,\n    textDecoration: \"line-through\",\n  }\n\n  const {completed, id, title} = props.todo\n\n  useEffect(() => {\n    return ()=>{\n      alert(\"Item deleted: \"+title)\n    }\n  },[])\n\n  return(\n    <li className=\"todo-item\">\n      <input\n        type=\"checkbox\"\n        checked={completed}\n        onChange={() => props.handleChangeProps(id)}\n        />\n      <button onClick={() => props.deleteTodoProps(id)}>\n      Delete </button>\n      <span style={completed ? completedStyle: null}> {title}</span>\n      </li>\n  )\n}\n\n\n/*class TodoItem extends React.Component{\n\n  componentWillUnmount(){\n    alert(\"!Item will be deleted!\")\n  }\n\n  render(){\n    const completedStyle = {\n      fontStyle: \"italic\",\n      color: \"#d35e0f\",\n      opacity: 0.4,\n      textDecoration: \"line-through\",\n    }\n    const { completed, id, title } = this.props.todo\n\n    return(<li className=\"todo-item\">\n      <input type=\"checkbox\"\n      checked={completed}\n      onChange={() => this.props.handleChangeProps(id)}/>\n      <button onClick={() => this.props.deleteTodoProps(id)}>\n      Delete</button>\n      <span style={completed ? completedStyle: null}>\n      {title}\n      </span>\n      </li>);\n  }\n}*/\n\nexport default TodoItem\n","import React from \"react\"\nimport TodoItem from \"./TodoItem\"\n\n\nconst TodosList = (props) => {\n  return(\n    <>\n     {props.todos.map(todo => (<TodoItem\n                                  key={todo.id}\n                                  todo={todo}\n                                  handleChangeProps={props.handleChangeProps}\n                                  deleteTodoProps={props.deleteTodoProps}/>))}\n    </>\n\n  )\n}\n\n/*class TodosList extends React.Component{\n  render(){\n    return(<>\n      {this.props.todos.map(todo => (<TodoItem\n                                      key={todo.id}\n                                      todo={todo}\n                                      handleChangeProps={this.props.handleChangeProps}\n                                      deleteTodoProps={this.props.deleteTodoProps} />))}\n      </>\n    )\n  };\n}*/\n\nexport default TodosList\n","import React, {useEffect, useRef} from \"react\"\n\nconst Header = (props) => {\n  const headerStyle = {\n    padding: \"20px 0\",\n    lineHeight: \"2em\",\n  }\nconst isInitialMount = useRef(true)\nconsole.log(isInitialMount)\n\nuseEffect(() => {\n    var x = Math.floor(Math.random()*256)\n    var y = Math.floor(Math.random()*256)\n    var z = Math.floor(Math.random()*256)\n    var bgcolor = \"rgb(\"+x+\",\"+y+\",\"+z+\")\"\n\n    var changeArray = [\"now that's what i call a change!\",\"changed\",\"wow\",\"what a change\",\"fantastic!\",\"great stuff\"];\n\n    var changeWord = changeArray[Math.floor(Math.random()*6)];\n\n    if (isInitialMount.current) {\n      isInitialMount.current = false;\n    }\n    else{\n      document.getElementById(\"inH1\").innerHTML = changeWord\n      document.getElementById(\"inH1\").style.backgroundColor = bgcolor;\n    }\n  }, [props.headerSpan])\n\n\n  return (\n    <header style={headerStyle}>\n      <h1 style={{fontSize: \"25px\", marginBottom: \"15px\"}}>\n        Todo Todo <span id=\"inH1\"></span>\n      </h1>\n      <p style={{fontSize: \"19px\"}}>\n        The Pink Panther's fav List\n      </p>\n    </header>\n  )\n}\n\n/*class Header extends React.Component {\n  componentDidUpdate(prevProps, prevState){\n\n    var x = Math.floor(Math.random()*256);\n    var y = Math.floor(Math.random()*256);\n    var z = Math.floor(Math.random()*256);\n\n    var changeArray = [\"now that's what i call a change!\",\"changed\",\"wow\",\"what a change\",\"fantastic!\",\"great stuff\"];\n\n    var changeWord = changeArray[Math.floor(Math.random()*6)];\n\n    var bgcolor = \"rgb(\"+x+\",\"+y+\",\"+z+\")\";\n\n    if(prevProps.headerSpan !== this.props.headerSpan){\n      document.getElementById(\"inH1\").innerHTML = changeWord;\n      document.getElementById(\"inH1\").style.backgroundColor = bgcolor;\n    }\n  }\n  render(){\n    const headerStyle = {\n      padding: \"20px 0\",\n      lineHeight: \"2em\",\n    }\n    return(\n      <header style={headerStyle}>\n      <h1 style={{fontSize: \"25px\", marginBottom: \"15px\"}}>Simple Todo Todo <span id=\"inH1\" /></h1>\n      <p style={{fontSize: \"19px\"}}>Pink Panther List </p>\n      </header>\n    )\n  }\n}*/\n\nexport default Header\n","import React, {useState} from \"react\"\n\nconst InputTodo = (props) => {\n  const [inputText, setInputText] = useState(\"\");\n\n  const onChange = (e) => {\n    setInputText({\n      ...inputText,\n      [e.target.name]: e.target.value,\n    })\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    props.addTodoProps(inputText.title)\n    setInputText({\n      title: \"\",\n    })\n  }\n\n  return (\n    <div>\n    <form onSubmit={handleSubmit} className=\"form-container\">\n    <input\n      type=\"text\"\n      className=\"input-text\"\n      placeholder=\"Add todo...\"\n      value={inputText.itle}\n      name=\"title\"\n      onChange={onChange}\n      />\n    <input type=\"submit\" className=\"input-submit\" value=\"Submit\" />\n    </form>\n    </div>)\n}\n\n\n\n/*class InputTodo extends Component {\n\n  state = {\n    title: \"\"\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.addTodoProps(this.state.title);\n    this.setState({\n      title:\"\"\n    });\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render(){\n    return(\n      <form onSubmit={this.handleSubmit} className=\"form-container\">\n      <input type=\"text\"\n      placeholder=\"Add stuff\"\n      value={this.state.title}\n      name=\"title\"\n      onChange={this.onChange} />\n      <input type=\"submit\" className=\"input-submit\" value= \"Submit\" />\n      </form>\n    )\n  };\n}\n*/\nexport default InputTodo\n","import React, {useState, useEffect} from \"react\"\nimport TodosList from \"./TodosList\"\nimport Header from \"./Header\"\nimport InputTodo from \"./InputTodo\"\nimport {v4 as uuid} from \"uuid\";\nimport axios from \"axios\";\n\nconst TodoContainer = (props) => {\n  const [todos, setTodos] = useState([])\n  const [show, setShow] = useState(false)\n\n  const handleChange = (id) => {\n    setTodos(\n      todos.map(todo => {\n        if (todo.id === id) {\n          todo.completed =! todo.completed\n        }\n        return todo\n      })\n    )\n    setShow(!show)\n  }\n\n  const delTodo = (id) => {\n    setTodos([\n      ...todos.filter(todo => {\n        return todo.id !== id\n      }),\n    ])\n  }\n\n\n  const addTodoItem = title => {\n    const newTodo = {\n      id: uuid(),\n      title: title,\n      completed: false,\n    }\n    setTodos([...todos, newTodo])\n  }\n\n  useEffect(() => {\n    console.log(\"test\");\n    axios\n      .get(\"https://jsonplaceholder.typicode.com/todos?_limit=10\")\n      .then(response => setTodos(response.data))\n  },[])\n\n  return(\n    <div className = \"container\">\n      <Header headerSpan={show} />\n      <InputTodo addTodoProps={addTodoItem} />\n      <TodosList\n        todos={todos}\n        handleChangeProps={handleChange}\n        deleteTodoProps={delTodo}\n        />\n    </div>\n  )\n\n}\n\n\n\n\n\n/*class TodoContainer extends React.Component{\n\n  state = {\n    todos: [],\n    show: false,\n  };\n\n  handleChange = (id) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map(todo => {\n        if (todo.id === id){\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      }),\n      show: !this.state.show,\n    }));\n  };\n\n  delTodo = (id) => {\n    axios\n      .delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\n      .then(response =>\n        this.setState({\n          todos: [\n            ...this.state.todos.filter(todo => {\n              return todo.id !== id\n            }),\n          ]\n        }))\n  };\n\n  addTodoItem = (title) => {\n    axios\n      .post(\"https://jsonplaceholder.typicode.com/todos\", {\n        title:title,\n        completed: false,\n      })\n      .then(response =>\n        this.setState({\n          todos: [...this.state.todos, response.data]\n        }))}\n\n  componentDidMount(){\n    axios.get(\"https://jsonplaceholder.typicode.com/todos\",{\n      params: {\n        _limit: 10\n      }\n    })\n    .then(response => this.setState({todos: response.data}));\n  }\n\n  render(){\n    return (\n      <div className=\"container\">\n      <Header headerSpan={this.state.show} />\n      <InputTodo addTodoProps={this.addTodoItem}/>\n      <TodosList todos={this.state.todos}\n      handleChangeProps={this.handleChange}\n      deleteTodoProps={this.delTodo}/>\n      </div>\n    );\n  }\n}\n*/\nexport default TodoContainer\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n//component file\nimport TodoContainer from \"./components/TodoContainer\"\nimport \"./App.css\"\n\nReactDOM.render(<div><TodoContainer /></div>, document.getElementById(\"root\"))\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}